/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sv.edu.udb.catedra.encargados;
import sv.edu.udb.catedra.*;
import java.sql.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author luigi
 */
public class MaeAutor extends javax.swing.JInternalFrame {

    /**
     * Creates new form MaeAutor
     */
    
    ResultSet resultado;
    DefaultTableModel modelo = null;
    public static int bandera = 0;
    static int id;
    Conexion con;
    DateFormat df = DateFormat.getDateInstance();
    private final java.util.Date fechaActual = new java.util.Date();
    SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat stringToDate = new SimpleDateFormat("yyyy-MM-dd");
    
    public MaeAutor() {
        initComponents();
        Object [][] data = null;
        String [] columns = {"ID","Nombre","Apellido","Fecha de Nacimineto","País"};
        modelo = new DefaultTableModel(data,columns);
        this.dgvdatos.setModel(modelo);
        iniciarValores();
    }
    
    public void iniciarValores(){
        try {
            con = new Conexion();
            con.setRs("SELECT paiId,paiNombre FROM Pais ORDER BY paiNombre ASC");
            con.llenarCombo(cboPais);
            generarListado();
            btnNuevo.setEnabled(true);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnCancelar.setEnabled(false);
            btnLimpiar.setEnabled(false);
            con.cerrarConexion();
            dtpFechaNac.setDate(fechaActual);
        } catch (SQLException ex) {
            Logger.getLogger(Editorial.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "ERROR: Ocurrió un problema en la BD "+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE, null);
        }
    }
    
    public void generarListado(){
        while (modelo.getRowCount()!=0) {
            modelo.removeRow(0);
        }
        try {
            con.setRs("SELECT a.autId,a.autNombre,a.autApellido,a.autFechaNac,p.paiNombre FROM Autor a\n" +
                "INNER JOIN Pais p ON a.paiId = p.paiId");
            resultado = (ResultSet) con.getRs();
            while (resultado.next()) {
                Object [] newRow={resultado.getInt(1),resultado.getString(2),resultado.getString(3),resultado.getString(4),resultado.getString(5)};
                modelo.addRow(newRow);
            }
            resultado.close();
        } catch (SQLException | NullPointerException ex) {
            Logger.getLogger(Editorial.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "ERROR: Ocurrió un problema en la BD "+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE, null);
        }
    }
    
    private void limpiar(){
        txtNombre.setText("");txtApellido.setText("");cboPais.setSelectedIndex(0);
    }
    
    private Boolean validar(){
        if(txtNombre.getText().isEmpty() || txtApellido.getText().isEmpty() || df.format(dtpFechaNac.getDate()).isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar los datos requeridos", "Error", JOptionPane.ERROR_MESSAGE, null);
            return false;
        }else{
            if (dtpFechaNac.getDate().before(fechaActual)) {
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "La fecha ingresada debe ser menor que la actual", "Error", JOptionPane.ERROR_MESSAGE, null);
                return false;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        dtpFechaNac = new com.toedter.calendar.JDateChooser();
        cboPais = new javax.swing.JComboBox<>();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dgvdatos = new javax.swing.JTable();

        setClosable(true);
        setTitle("Autores");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("Nombre:");

        jLabel2.setText("Apellido:");

        jLabel3.setText("Fecha de Nacimiento:");

        jLabel4.setText("País:");

        cboPais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");

        btnLimpiar.setText("Limpiar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                            .addComponent(txtApellido))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dtpFechaNac, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(cboPais, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(78, 78, 78)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(192, 192, 192))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(dtpFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnLimpiar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(btnModificar)
                        .addGap(4, 4, 4)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dgvdatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dgvdatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dgvdatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dgvdatos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        try {
            if (btnNuevo.getText().equals("Nuevo")) {
                btnModificar.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnCancelar.setEnabled(true);
                btnLimpiar.setEnabled(true);
                btnNuevo.setText("Agregar");
                limpiar();
            } else {
                if(validar()){
                    Conexion con2 = new Conexion();
                    con2.setQuery("INSERT INTO Autor VALUES(null,'"+txtNombre.getText().trim()+"','"+txtApellido.getText().trim()+"','"+formateador.format(dtpFechaNac.getDate()) +"',"+con.getValue(cboPais)+")");
                    JOptionPane.showMessageDialog(null, "Autor ingresado exitosamente", "Transacción", JOptionPane.INFORMATION_MESSAGE, null);
                    con2.cerrarConexion();
                    iniciarValores();
                    limpiar();
                }else
                    JOptionPane.showMessageDialog(null, "ERROR: Debe ingresar los datos requeridos.", "Error", JOptionPane.ERROR_MESSAGE, null);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: Ocurrió un problema en la BD "+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void dgvdatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dgvdatosMouseClicked
        // TODO add your handling code here:
        int fila = dgvdatos.rowAtPoint(evt.getPoint());
        if ((fila > -1)) {
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
            id = Integer.parseInt(modelo.getValueAt(fila, 0).toString());
            txtNombre.setText(modelo.getValueAt(fila, 1).toString());
            txtApellido.setText(modelo.getValueAt(fila, 2).toString());
            try {
                dtpFechaNac.setDate(stringToDate.parse(modelo.getValueAt(fila, 3).toString()));
            } catch (ParseException ex) {
                Logger.getLogger(MaeAutor.class.getName()).log(Level.SEVERE, null, ex);
            }
            cboPais.setSelectedItem(modelo.getValueAt(fila, 4).toString());
        } else limpiar();
    }//GEN-LAST:event_dgvdatosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        try {
            if(JOptionPane.showConfirmDialog(null, "¿Desea eliminar el autor " + txtNombre.getText() + "?","Confirmación",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                Conexion con2 = new Conexion();    
                con2.setQuery("DELETE FROM Autor WHERE autId = " + id);
                con2.cerrarConexion();
                JOptionPane.showMessageDialog(this, "Autor eliminado exitosamente");
                limpiar();
                iniciarValores();
            }
        } catch (SQLException ex){
            JOptionPane.showMessageDialog(null, "ERROR: Ocurrió un problema en la BD "+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        try {
            if (btnModificar.getText().equals("Modificar")) {
                btnNuevo.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnCancelar.setEnabled(true);
                btnLimpiar.setEnabled(true);
                btnModificar.setText("Actualizar");
            } else {
                if (validar()) {
                    if(JOptionPane.showConfirmDialog(null, "¿Desea modificar el autor " + txtNombre.getText() + "?","Confirmación",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        Conexion con2 = new Conexion();
                        con2.setQuery("UPDATE Autor SET uatNombre='" + txtNombre.getText().trim() + "',autApellido='" + txtApellido.getText().trim() + 
                                "',autFechaNac = '" + formateador.format(dtpFechaNac.getDate()) + "', paiId = " + con2.getValue(cboPais) + " WHERE autId = " + id);
                        con2.cerrarConexion();
                        JOptionPane.showMessageDialog(this, "Autor modificado exitosamente");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Debe ingresar los campos requeridos");
                }
                btnModificar.setText("Modificar");
                iniciarValores();
                limpiar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: Ocurrió un problema en la BD "+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        try{
            bandera=0;
            this.dispose();
            con.cerrarConexion();
        }
        catch (SQLException ex){
            Logger.getLogger(MaeAutor.class.getName()).log(Level.SEVERE, null,ex);
        }
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cboPais;
    private javax.swing.JTable dgvdatos;
    private com.toedter.calendar.JDateChooser dtpFechaNac;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
